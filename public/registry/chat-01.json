{
  "name": "chat-01",
  "type": "registry:block",
  "description": "A simple chat page.",
  "registryDependencies": [
    "card",
    "https://simple-ai.alwurts.com/registry/chat-input.json",
    "https://simple-ai.alwurts.com/registry/chat-message-area.json",
    "https://simple-ai.alwurts.com/registry/chat-message.json"
  ],
  "files": [
    {
      "path": "blocks/chat-01/page.tsx",
      "content": "import {\n\tBreadcrumb,\n\tBreadcrumbItem,\n\tBreadcrumbList,\n\tBreadcrumbPage,\n} from \"@/components/ui/breadcrumb\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n\tSidebarInset,\n\tSidebarProvider,\n\tSidebarTrigger,\n} from \"@/components/ui/sidebar\";\nimport { SidebarApp } from \"@/components/sidebar-app\";\nimport { Chat } from \"@/components/chat\";\n\nexport default function Page() {\n\treturn (\n\t\t<SidebarProvider>\n\t\t\t<SidebarApp />\n\t\t\t<SidebarInset className=\"flex flex-col h-svh\">\n\t\t\t\t<header className=\"sticky top-0 flex h-14 shrink-0 items-center gap-2 bg-background\">\n\t\t\t\t\t<div className=\"flex flex-1 items-center gap-2 px-3\">\n\t\t\t\t\t\t<SidebarTrigger />\n\t\t\t\t\t\t<Separator orientation=\"vertical\" className=\"mr-2 h-4\" />\n\t\t\t\t\t\t<Breadcrumb>\n\t\t\t\t\t\t\t<BreadcrumbList>\n\t\t\t\t\t\t\t\t<BreadcrumbItem>\n\t\t\t\t\t\t\t\t\t<BreadcrumbPage className=\"line-clamp-1\">\n\t\t\t\t\t\t\t\t\t\tProject Management & Task Tracking\n\t\t\t\t\t\t\t\t\t</BreadcrumbPage>\n\t\t\t\t\t\t\t\t</BreadcrumbItem>\n\t\t\t\t\t\t\t</BreadcrumbList>\n\t\t\t\t\t\t</Breadcrumb>\n\t\t\t\t\t</div>\n\t\t\t\t</header>\n\t\t\t\t<Chat />\n\t\t\t</SidebarInset>\n\t\t</SidebarProvider>\n\t);\n}\n",
      "type": "registry:page",
      "target": "app/chat/page.tsx"
    },
    {
      "path": "blocks/chat-01/components/chat.tsx",
      "content": "\"use client\";\n\nimport {\n\tChatInput,\n\tChatInputSubmit,\n\tChatInputTextArea,\n} from \"@/components/ui/chat-input\";\nimport {\n\tChatMessage,\n\tChatMessageAvatar,\n\tChatMessageContent,\n} from \"@/components/ui/chat-message\";\nimport { ChatMessageArea } from \"@/components/ui/chat-message-area\";\nimport { type ComponentPropsWithoutRef, useState } from \"react\";\n\nexport function Chat({ className, ...props }: ComponentPropsWithoutRef<\"div\">) {\n\tconst [value, setValue] = useState(\"\");\n\n\tconst messages = [\n\t\t{\n\t\t\tid: \"1\",\n\t\t\tcontent:\n\t\t\t\t\"Hi! I need help organizing my project management workflow. Can you guide me through some best practices?\",\n\t\t\trole: \"user\",\n\t\t},\n\t\t{\n\t\t\tid: \"2\",\n\t\t\tcontent:\n\t\t\t\t\"I'd be happy to help you with project management best practices! Here's a structured approach:\\n\\n## 1. Project Initiation\\n- Define clear project objectives\\n- Identify key stakeholders\\n- Set measurable goals\\n- Create project charter\\n\\n## 2. Planning Phase\\n- Break down work into tasks\\n- Set priorities\\n- Create timeline\\n- Assign responsibilities\\n\\nWould you like me to elaborate on any of these points?\",\n\t\t\trole: \"assistant\",\n\t\t},\n\t\t{\n\t\t\tid: \"3\",\n\t\t\tcontent:\n\t\t\t\t\"Yes, please tell me more about breaking down work into tasks. How should I approach this?\",\n\t\t\trole: \"user\",\n\t\t},\n\t\t{\n\t\t\tid: \"4\",\n\t\t\tcontent:\n\t\t\t\t\"Breaking down work into tasks is crucial for project success. Here's a detailed approach:\\n\\n### Work Breakdown Structure (WBS)\\n1. **Start with major deliverables**\\n   - Identify end goals\\n   - List main project phases\\n\\n2. **Break into smaller components**\\n   - Tasks should be:\\n     - Specific\\n     - Measurable\\n     - Achievable\\n     - Time-bound\\n\\n3. **Task Estimation**\\n   ```\\n   Task Example:\\n   - Name: User Authentication Feature\\n   - Duration: 3 days\\n   - Dependencies: Database setup\\n   - Priority: High\\n   ```\\n\\n4. **Use the 8/80 Rule**\\n   - Tasks shouldn't take less than 8 hours\\n   - Or more than 80 hours\\n   - If they do, break them down further\",\n\t\t\trole: \"assistant\",\n\t\t},\n\t\t{\n\t\t\tid: \"5\",\n\t\t\tcontent:\n\t\t\t\t\"That's really helpful! What tools would you recommend for tracking all these tasks?\",\n\t\t\trole: \"user\",\n\t\t},\n\t\t{\n\t\t\tid: \"6\",\n\t\t\tcontent:\n\t\t\t\t\"Here are some popular project management tools:\\n\\n### Tips for Tool Selection\\n- âœ… Consider team size\\n- âœ… Integration needs\\n- âœ… Learning curve\\n- âœ… Budget constraints\\n\\nWould you like specific recommendations based on your team's needs?\",\n\t\t\trole: \"assistant\",\n\t\t},\n\t\t{\n\t\t\tid: \"7\",\n\t\t\tcontent:\n\t\t\t\t\"Yes, we're a small team of 5 developers. What would work best for us?\",\n\t\t\trole: \"user\",\n\t\t},\n\t\t{\n\t\t\tid: \"8\",\n\t\t\tcontent:\n\t\t\t\t\"For a team of 5 developers, I'd recommend:\\n\\n### Primary Choice: Jira Software\\n\\n**Advantages:**\\n- ðŸ”§ Built for development teams\\n- ðŸ“Š Great for agile workflows\\n- ðŸ”„ Git integration\\n- ðŸ“± Mobile apps\\n\\n### Alternative: ClickUp\\n\\n**Benefits:**\\n- ðŸ’° Cost-effective\\n- ðŸŽ¨ More flexible\\n- ðŸš€ Faster setup\\n\\n```\\nRecommended Setup:\\n- Sprint Length: 2 weeks\\n- Board Structure:\\n  - Backlog\\n  - To Do\\n  - In Progress\\n  - Code Review\\n  - Testing\\n  - Done\\n- Key Features:\\n  - Story Points\\n  - Time Tracking\\n  - Sprint Reports\\n```\\n\\nWould you like me to explain how to set up the recommended workflow in either of these tools?\",\n\t\t\trole: \"assistant\",\n\t\t},\n\t];\n\n\treturn (\n\t\t<div className=\"flex-1 flex flex-col h-full overflow-y-auto\" {...props}>\n\t\t\t<ChatMessageArea scrollButtonAlignment=\"center\">\n\t\t\t\t<div className=\"max-w-2xl mx-auto w-full px-4 py-8 space-y-4\">\n\t\t\t\t\t{messages.map((message) => {\n\t\t\t\t\t\tif (message.role !== \"user\") {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ChatMessage key={message.id} id={message.id}>\n\t\t\t\t\t\t\t\t\t<ChatMessageAvatar />\n\t\t\t\t\t\t\t\t\t<ChatMessageContent content={message.content} />\n\t\t\t\t\t\t\t\t</ChatMessage>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<ChatMessage\n\t\t\t\t\t\t\t\tkey={message.id}\n\t\t\t\t\t\t\t\tid={message.id}\n\t\t\t\t\t\t\t\tvariant=\"bubble\"\n\t\t\t\t\t\t\t\ttype=\"outgoing\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<ChatMessageContent content={message.content} />\n\t\t\t\t\t\t\t</ChatMessage>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t</ChatMessageArea>\n\t\t\t<div className=\"px-2 py-4 max-w-2xl mx-auto w-full\">\n\t\t\t\t<ChatInput\n\t\t\t\t\tvariant=\"default\"\n\t\t\t\t\tvalue={value}\n\t\t\t\t\tonChange={(e) => setValue(e.target.value)}\n\t\t\t\t\tonSubmit={() => {\n\t\t\t\t\t\tconsole.log(value);\n\t\t\t\t\t\tsetValue(\"\");\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<ChatInputTextArea placeholder=\"Type a message...\" />\n\t\t\t\t\t<ChatInputSubmit />\n\t\t\t\t</ChatInput>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n",
      "type": "registry:component",
      "target": ""
    }
  ],
  "categories": [
    "chat"
  ]
}